{"version":3,"sources":["Dashboard.js","Login.js","Register.js","App.js","useToken.js","reportWebVitals.js","index.js"],"names":["Dashboard","port","process","PORT","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","useState","username","setUserName","password","setPassword","handleSubmit","e","console","log","preventDefault","token","className","onSubmit","required","type","onChange","target","value","registerUser","Register","repPassword","setRepPassword","handleRegister","alert","App","tokenString","localStorage","getItem","userToken","parse","getToken","setItem","useToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e61ae5e9.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Dashboard() {\n  return(\n    <center><h2>Game Nexus Dashboard</h2></center>\n  );\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\n\nconst port = process.env.PORT || 5000;\n\nasync function loginUser(credentials) \n{\n return fetch(`http://localhost:${port}/login`, {\n   method: 'POST',\n   headers: {\n     'Content-Type': 'application/json'\n   },\n   body: JSON.stringify(credentials)\n })\n   .then(data => data.json())\n}\n\n\nexport default function Login({setToken}) \n{\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e =>\n   {\n    console.log(\"Submitted\");\n\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  }\n\n  return(\n    <div className=\"login-wrapper\">\n      <h1>Please Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Username</p>\n          <input required type=\"text\" onChange={e => setUserName(e.target.value)} />\n        </label>\n        <label>\n          <p>Password</p>\n          <input required type=\"password\" onChange={e => setPassword(e.target.value)} />\n        </label>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nLogin.propTypes = \n{\n  setToken: PropTypes.func.isRequired\n};","import React, { useState } from 'react';\nimport './Register.css';\n\nconst port = process.env.PORT || 5000;\n\nasync function registerUser(credentials) \n{\n    return fetch(`http://localhost:${port}/register`, {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n        })\n}\n\n\nexport default function Register() \n{\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [repPassword, setRepPassword] = useState();\n\n  const handleRegister = async e =>\n   {\n    e.preventDefault();\n    if (password === repPassword)\n        registerUser({\n        username,\n        password\n        });\n    else alert(\"Different passwords!\");\n  }\n\n  return(\n    <div className=\"register-wrapper\">\n      <h1>Create new account</h1>\n      <form onSubmit={handleRegister}>\n        <label>\n          <p>Username</p>\n          <input required type=\"text\" onChange={e => setUserName(e.target.value)} />\n        </label>\n        <label>\n          <p>Password</p>\n          <input required type=\"password\" onChange={e => setPassword(e.target.value)} />\n        </label>\n        <label>\n          <p>Repeat Password</p>\n          <input required type=\"password\" onChange={e => setRepPassword(e.target.value)} />\n        </label>\n          <div>\n              <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'; \n//import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport useToken from './useToken';\nimport Register from './Register';\n\n\nfunction App() \n{\n  const { token, setToken } = useToken();\n\n  console.log(token);\n  console.log(setToken);\n\n  if (!token) \n  {\n    return (\n    <div className = \"wrapper\">\n      <Login setToken={setToken} />\n      <Register />\n    </div>\n    );\n  }\n\n  return (\n    <div className = \"wrapper\">\n      <div className=\"App\">\n        <h1>Game Nexus</h1>\n      </div>\n\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*\nclass App extends Component {\n  state = {\n    response: {}\n  };\n\n  componentDidMount() {\n    axios.get('/api/v1/say-something').then((res) => {\n      const response = res.data;\n      this.setState({response});\n    });\n  }\n\n  render() {\n    const [token, setToken] = useState();\n    \n    if (!token)\n    {\n      return (\n        <Login setToken = {setToken} />\n      )\n    }\n\n    return (\n        <div className = \"wrapper\">\n          <div className=\"App\">\n            <h1>Game Nexus</h1>\n            <h1>{this.state.response.nazwa_projektu}</h1>\n          </div>\n\n          <BrowserRouter>\n            <Switch>\n              <Route path = \"/dashboard\">\n                <Dashboard />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n    );\n  }\n}\n\nexport default App;*/","import { useState } from 'react';\n\nexport default function useToken() \n{\n  function getToken() {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token\n  }\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}